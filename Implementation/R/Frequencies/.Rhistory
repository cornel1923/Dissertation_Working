library(ggraph)
library(igraph)
library(reshape2)
library(disparityfilter)
availableData = read.csv(file.choose(),header=TRUE, sep=",") # choose an edgelist in .csv file format
edges = availableData;
ingredients <- names(sort(table(edges$ingredient_id),decreasing=TRUE))[1:3]
ingredientsFreq <- sort(table(edges$ingredient_id),decreasing=TRUE)[1:10];
x <- c()
y <- c()
weight <- c()
contor = 0;
for(i in 1:length(edges$ingredient_id)) {
for(j in 1:length(ingredients)) {
if (as.numeric(ingredients[j]) == as.numeric(edges$ingredient_id[i])){
x[contor] = as.character(ingredients[j])
y[contor] = as.character(edges$compound_id[i])
weight[contor] = contor*100;
contor = contor+1;
}
}
}
ingredient_id = x
compound_id = y
edges = data.frame(ingredient_id, compound_id)
g <- graph.empty(directed = F)
node.in <- as.character(edges$ingredient_id);
node.out <- as.character(edges$compound_id);
g <- add.vertices(g,nv=length(node.out),attr=list(name=node.out),type=rep(FALSE,length(node.out)))
g <- add.vertices(g,nv=length(node.in),attr=list(name=node.in),type=rep(TRUE,length(node.in)))
edge.list.vec <- as.vector(t(as.matrix(data.frame(edges))))
g <- add.edges(g,edge.list.vec)
V(g)$color <- V(g)$type
V(g)$color=gsub("FALSE","red",V(g)$color)
V(g)$color=gsub("TRUE","blue",V(g)$color)
g = delete.vertices(simplify(g), degree(g) == 0);
# define color and shape mappings.
col <- c("steelblue", "orange")
shape <- c("circle", "square")
plot.igraph(g, vertex.color=c("green"))
png("mygraph.png", heigh=1000, width=800)
plot.igraph(g, vertex.color=c("green"))
dev.off()
