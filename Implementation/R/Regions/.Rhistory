length(DATA$NAME)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, missingCountryCol='white'
, addLegend  = FALSE)
color
DATA <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
n = length(DATA$Country);
DATA <- DATA[!is.na(DATA$Country),]
#colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
colors = c();
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
n
color
for(i in 1:length(n)) {
if(toString(DATA$Country[i]) == "NA"){
colors[i] = "#ffffff";
}else{
colors[i] = color[i];
}
}
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, missingCountryCol='white'
, addLegend  = FALSE)
colors
colors
n
DATA <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
n = length(DATA$Country);
DATA <- DATA[!is.na(DATA$Country),]
#colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
colors = c();
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
for(i in 1:length(n)) {
if(toString(DATA$Country[i]) == "NA"){
colors[i] = "#ffffff";
}else{
colors[i] = color[i];
}
}
colors
length(n)
for(i in 1:n) {
if(toString(DATA$Country[i]) == "NA"){
colors[i] = "#ffffff";
}else{
colors[i] = color[i];
}
}
colors
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, missingCountryCol='white'
, addLegend  = FALSE)
DATA$Country
allData <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
DATA = allData;
n = length(DATA$Country);
DATA <- DATA[!is.na(DATA$Country),]
#colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
colors = c();
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
allData$Country
DATA$Country
allData$Country
length(allData$Country)
for(i in 1:length(allData$Country)) {
if(toString(allData$Country[i]) == "NA"){
colors[i] = "#ffffff";
}else{
colors[i] = color[i];
}
}
colors
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, missingCountryCol='white'
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
colors
allData <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
DATA = allData;
n = length(DATA$Country);
DATA <- DATA[!is.na(DATA$Country),]
#colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
colors = c();
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
for(i in 1:length(allData$Country)) {
colors[i] = color[i];
}
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue'
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red",
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Biodiversity categories'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
allData$Region
mapCountryData(DATA
, nameColumnToPlot='Region'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
country_coord
mapCountryData(DATA
, nameColumnToPlot='Country'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
for(i in 1:length(DATA$Country)) {
colors[i] = color[i];
}
mapCountryData(DATA
, nameColumnToPlot='Country'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
for(i in 1:length(allData$Country)) {
colors[i] = color[i];
}
colors
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
colors
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord), cex = 0.2)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.3, col = "white")
source <-regions$Region;
regions$Country
allData <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
DATA = allData;
n = length(DATA$Country);
DATA <- DATA[!is.na(DATA$Country),]
colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
DATA$NAME
allData$NAME
which(regions$Country == 'EasternEuropean_Russian')
regions[15]
regions$Country[15]
russiaCode = which(regions$Country == 'EasternEuropean_Russian')
regions$Country[russiaCode] = 'Russia'
regions$Country
russiaCode
russiaCode = which(regions$Country == 'EasternEuropean_Russian')
regions$Country[russiaCode] = 'Russia'
regions$Country[15] = 'Russia'
temp = regions$Country
russiaCode = which(temp == 'EasternEuropean_Russian')
temp[15] = 'Russia'
temp
#map.txt
regions = read.csv(file.choose(),header=TRUE, sep=",")
regions$Country[regions$Country == 'EasternEuropean_Russian'] <- 'setosa'
regions$Country == 'EasternEuropean_Russian'
regions$Country[regions$Country == 'EasternEuropean_Russian']
#map.txt
regions = read.csv(file.choose(),header=TRUE, sep=",")
regions$Country[regions$Country == 'EasternEuropean_Russian']
regions$Country[regions$Country == 'EasternEuropean_Russian',] <- 'Russia'
#map.txt
regions = read.csv(file.choose(),header=TRUE, sep=",")
regions$Country =  as.character(regions$Country)
regions$Country
regions$Country[regions$Country == 'EasternEuropean_Russian',] <- 'Russia'
regions$Country
source('E:/Dissertation_working/Dissertation_Working/Implementation/R/Regions/all_regions.R', echo=TRUE)
regions$Country
regions$Country[regions$Country == 'EasternEuropean_Russian'] <- 'Russia'
regions$Country
regions$Country[regions$Country == 'UK-and-Ireland'] <- 'United Kingdom'
regions$Country[regions$Country == 'Moroccan'] <- 'Morocco'
regions
regions<-rbind(regions, data.frame(Country='Ireland',Region='WesternEuropean'))
regions
allData <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
DATA = allData$NAME;
n = length(DATA$Country);
DATA$Country
DATA
regions$Country =  as.factor(regions$Country)
regions$Country
regions$Country =  as.character(regions$Country)
#map.txt
regions = read.csv(file.choose(),header=TRUE, sep=",")
regions$Country =  as.character(regions$Country)
regions$Country[regions$Country == 'EasternEuropean_Russian'] <- 'Russia'
regions$Country[regions$Country == 'UK-and-Ireland'] <- 'United Kingdom'
regions$Country[regions$Country == 'Greek'] <- 'Greece'
regions$Country[regions$Country == 'Moroccan'] <- 'Morocco'
regions<-rbind(regions, data.frame(Country='Ireland',Region='WesternEuropean'))
regions$Country =  as.factor(regions$Country)
allData <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
DATA = allData$NAME;
n = length(DATA$Country);
DATA$Country
DATA <- DATA[!is.na(DATA$Country),]
regions
DATA$NAME
DATA
regions$Country =  as.character(regions$Country)
regions$Country[regions$Country == 'EasternEuropean_Russian'] <- 'Russia'
regions$Country[regions$Country == 'Greek'] <- 'Greece'
regions$Country[regions$Country == 'UK-and-Ireland'] <- 'United Kingdom'
regions$Country[regions$Country == 'Moroccan'] <- 'Morocco'
regions<-rbind(regions, data.frame(Country='Ireland',Region='WesternEuropean'))
regions$Country =  as.factor(regions$Country)
#map.txt
regions = read.csv(file.choose(),header=TRUE, sep=",")
regions$Country =  as.character(regions$Country)
regions$Country[regions$Country == 'EasternEuropean_Russian'] <- 'Russia'
regions$Country[regions$Country == 'Greek'] <- 'Greece'
regions$Country[regions$Country == 'UK-and-Ireland'] <- 'United Kingdom'
regions<-rbind(regions, data.frame(Country='Ireland',Region='WesternEuropean'))
regions$Country[regions$Country == 'Moroccan'] <- 'Morocco'
regions$Country =  as.factor(regions$Country)
allData <- joinCountryData2Map(regions, joinCode = "NAME", nameJoinColumn = "Country",nameCountryColumn = "Name")
DATA = allData;
n = length(DATA$Country);
DATA <- DATA[!is.na(DATA$Country),]
colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
country_coord
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.5, col = "white")
mapCountryData(allData
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
mapCountryData(allData
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette='white'
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.5, col = "white")
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
colors = c();
for(i in 1:length(allData$Country)) {
colors[i] = color[i];
}
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
colors = c();
for(i in 1:length(allData$Country)) {
colors[i] = '#ffffff';
}
mapCountryData(allData
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
colors = rainbow(n, s = 1, v = 0.5, start = 0, end = max(1, n - 1)/n, alpha = 1)
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='lightblue',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
mapCountryData(DATA
, nameColumnToPlot='NAME'
, catMethod = 'categorical'
, mapTitle='Countries'
, colourPalette=colors
, oceanCol='white',
missingCountryCol = "red"
, addLegend  = FALSE)
# get the coordinates for each country
country_coord<-data.frame(coordinates(DATA),stringsAsFactors=F)
# label the countries
text(x=country_coord$X1,y=country_coord$X2,labels=row.names(country_coord),
cex = 0.2, col = "white")
